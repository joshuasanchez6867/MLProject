{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/ECS 171/Webpage/FInalWebpage/frontend/src/Components/LinkOne.js\";\nimport React, { Component, useRef, useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LinkOne extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleformData = () => {\n      var newData = this.props.newData;\n      newData({\n        sepalLength: 6.4,\n        sepalWidth: 2.9,\n        petalLength: 4.3,\n        petalWidth: 1.3\n      });\n      this.componentDidMount();\n    };\n\n    this.componentDidMount = () => {\n      var newresult = this.props.newresult;\n      fetch('http://127.0.0.1:5000/prediction/', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(this.props.formData)\n      }).then(response => response.json()).then(response => {\n        newresult(response.result);\n        console.log(\"This is the result:\" + response.result);\n      });\n    };\n  }\n\n  render() {\n    if (this.props.stage == 2) {\n      // notice curly braces evaluates the variable to get a string.\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleformData,\n          children: \" Click me \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this), this.props.result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default LinkOne;","map":{"version":3,"sources":["/Users/a/Desktop/ECS 171/Webpage/FInalWebpage/frontend/src/Components/LinkOne.js"],"names":["React","Component","useRef","useEffect","useState","Form","Col","Container","Row","Button","LinkOne","handleformData","newData","props","sepalLength","sepalWidth","petalLength","petalWidth","componentDidMount","newresult","fetch","headers","method","body","JSON","stringify","formData","then","response","json","result","console","log","render","stage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA8D,OAA9D;AAGA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,kCAAP;;;AAEA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAC5BU,cAD4B,GACX,MAAM;AACrB,UAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAzB;AACAA,MAAAA,OAAO,CAAC;AAACE,QAAAA,WAAW,EAAE,GAAd;AACNC,QAAAA,UAAU,EAAE,GADN;AAENC,QAAAA,WAAW,EAAE,GAFP;AAGNC,QAAAA,UAAU,EAAE;AAHN,OAAD,CAAP;AAIE,WAAKC,iBAAL;AACH,KAR2B;;AAAA,SAU5BA,iBAV4B,GAUR,MAAM;AACtB,UAAIC,SAAS,GAAG,KAAKN,KAAL,CAAWM,SAA3B;AAGAC,MAAAA,KAAK,CAAC,mCAAD,EACH;AACEC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SADX;AAKEC,QAAAA,MAAM,EAAE,MALV;AAMEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKZ,KAAL,CAAWa,QAA1B;AANR,OADG,CAAL,CASGC,IATH,CASQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATpB,EAUGF,IAVH,CAUQC,QAAQ,IAAI;AAChBT,QAAAA,SAAS,CAACS,QAAQ,CAACE,MAAV,CAAT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBJ,QAAQ,CAACE,MAA7C;AACD,OAbH;AAcH,KA5B2B;AAAA;;AA6B5BG,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKpB,KAAL,CAAWqB,KAAX,IAAoB,CAAvB,EAAyB;AAErB;AACA,0BACI;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,KAAKvB,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEK,KAAKE,KAAL,CAAWiB,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KATD,MAUI;AACA,aAAO,IAAP;AACH;AACJ;;AA3C2B;;AA6C9B,eAAepB,OAAf","sourcesContent":["import React, { Component,useRef, useEffect, useState  } from 'react';\n\n\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass LinkOne extends Component {\n    handleformData = () => {\n      var newData = this.props.newData;\n      newData({sepalLength: 6.4,\n        sepalWidth: 2.9,\n        petalLength: 4.3,\n        petalWidth: 1.3});\n        this.componentDidMount();\n    }\n\n    componentDidMount = () => {\n        var newresult = this.props.newresult;\n\n\n        fetch('http://127.0.0.1:5000/prediction/', \n          {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(this.props.formData)\n          })\n          .then(response => response.json())\n          .then(response => {\n            newresult(response.result);\n            console.log(\"This is the result:\" + response.result);\n          });\n    }\n    render(){\n        if(this.props.stage == 2){\n\n            // notice curly braces evaluates the variable to get a string.\n            return (\n                <div>\n                  <button onClick={this.handleformData}> Click me </button>\n                    {this.props.result}\n                </div>\n            );\n        }\n        else{\n            return null;\n        }\n    }\n  }\n  export default LinkOne;"]},"metadata":{},"sourceType":"module"}